  
  package com.traveltripper.perfMonitoringApp;

import java.awt.Image;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Properties;

import javax.swing.ImageIcon;

/**
 *
 * @author TT124
 */
public class RequestHeaderJFrame extends javax.swing.JFrame {

    /**
     * Creates new form RequestHeaderJFrame
     */
	
	 public RequestHeaderJFrame() {
        
        initComponents();
        
        contentPanel.setFocusable(true);
        setIcon();
        inputPanel2.setVisible(false);
        inputPanel3.setVisible(false);
        jFrameSize = getBounds();
         
    }
    public void setIcon()
    {
    	Image image = new ImageIcon(this.getClass().getClassLoader().getResource("images/TraveltripperICon.png")).getImage();
    	setIconImage(image);
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	
    	
    	 io = this.getClass().getClassLoader().getResourceAsStream("Props/RequestHeader.properties");
    	 prop = new Properties();
    	try {
			prop.load(io);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			
			e.printStackTrace();
		}
    	

        contentPanel = new javax.swing.JPanel();
        inputPanel1 = new javax.swing.JPanel();
        inputPanel2 = new javax.swing.JPanel();
        inputPanel3 = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        
        paramVal1 = new javax.swing.JTextField();
        paramVal2 = new javax.swing.JTextField();
        paramVal3 = new javax.swing.JTextField();
        paramName1 = new javax.swing.JTextField();
        paramName2 = new javax.swing.JTextField();
        paramName3 = new javax.swing.JTextField();
        
        addMoreButton1 = new javax.swing.JButton();
        addMoreButton2 = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(prop.getProperty("title"));
        setResizable(false);

        contentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 102)));

        
        //Creating obj for
        ListenerForTfAndButtonReq handler=new ListenerForTfAndButtonReq();
        
        
        
        
        paramVal1.setText(prop.getProperty("paramVal1"));
        paramVal1.addFocusListener(handler);

        paramName1.setText(prop.getProperty("paramName1"));
        paramName1.addFocusListener(handler);

        addMoreButton1.setText(prop.getProperty("addMoreButton1"));
        addMoreButton1.addActionListener(handler);
        
        javax.swing.GroupLayout inputPanel1Layout = new javax.swing.GroupLayout(inputPanel1);
        inputPanel1.setLayout(inputPanel1Layout);
        inputPanel1Layout.setHorizontalGroup(
            inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanel1Layout.createSequentialGroup()
                        .addComponent(paramName1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paramVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addMoreButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        inputPanel1Layout.setVerticalGroup(
            inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramName1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paramVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addMoreButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        paramName2.setText(prop.getProperty("paramName2"));
        paramName2.addFocusListener(handler);

        paramVal2.setText(prop.getProperty("paramVal2"));
        paramVal2.addFocusListener(handler);

        addMoreButton2.setText(prop.getProperty("addMoreButton2"));
        addMoreButton2.addActionListener(handler);
        javax.swing.GroupLayout inputPanel2Layout = new javax.swing.GroupLayout(inputPanel2);
        inputPanel2.setLayout(inputPanel2Layout);
        inputPanel2Layout.setHorizontalGroup(
            inputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(inputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(inputPanel2Layout.createSequentialGroup()
                        .addComponent(paramName2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paramVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addMoreButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        inputPanel2Layout.setVerticalGroup(
            inputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramName2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paramVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addMoreButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        paramName3.setText(prop.getProperty("paramName3"));
        paramName3.addFocusListener(handler);

        paramVal3.setText(prop.getProperty("paramVal3"));
        paramVal3.addFocusListener(handler);
		
        javax.swing.GroupLayout inputPanel3Layout = new javax.swing.GroupLayout(inputPanel3);
        inputPanel3.setLayout(inputPanel3Layout);
        inputPanel3Layout.setHorizontalGroup(
            inputPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paramName3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paramVal3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        inputPanel3Layout.setVerticalGroup(
            inputPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramName3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paramVal3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submitButton.setText(prop.getProperty("submitButton"));
        submitButton.addActionListener(handler);
		
        closeButton.setText(prop.getProperty("closeButton"));
        closeButton.addActionListener(handler);
		
        resetButton.setText(prop.getProperty("resetButton"));
        resetButton.addActionListener(handler);
		
        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(inputPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void paramName2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void paramName3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void paramVal3ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void addMoreButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
       
       addMoreButton1.setVisible(false);
               
       inputPanel2.setVisible(true);
       addMoreButton2.setVisible(true);
       
       myMap.put(paramName1.getText(), paramVal1.getText());
      
        
    }                                              

    private void addMoreButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        
        //inputPanel2.remove(addMoreButton2);
      
        addMoreButton2.setVisible(false);
        inputPanel3.setVisible(true);
        myMap.put(paramName2.getText(), paramVal2.getText());
        
        
        setBounds((int) getAlignmentX()+350, (int) contentPanel.getAlignmentY()+200, getWidth(),contentPanel.getHeight()-40);
        
        
      
        
    }                                              

    
    
    private void paramName1FocusGained(java.awt.event.FocusEvent evt) {                                       
        // TODO add your handling code here:
    	
        if(paramName1.getText().equalsIgnoreCase(prop.getProperty("paramName1")))
        {
            paramName1.setText("");
        }
        
    }                                      

    private void paramName1FocusLost(java.awt.event.FocusEvent evt) {                                     
        // TODO add your handling code here:
    	
    	
          if(paramName1.getText().equalsIgnoreCase(""))
        {
            paramName1.setText(prop.getProperty("paramName1"));
        }
    }                                    

    private void paramVal1FocusGained(java.awt.event.FocusEvent evt) {                                      
        // TODO add your handling code here:
        if(paramVal1.getText().equalsIgnoreCase(prop.getProperty("paramVal1")))
        {
         paramVal1.setText("");
        }
        
    }                                     


    
   
    private void paramVal1FocusLost(java.awt.event.FocusEvent evt) {                                    
        // TODO add your handling code here:
    	
         if(paramVal1.getText().equalsIgnoreCase(""))
        {
         paramVal1.setText(prop.getProperty("paramVal1"));
        }
        
    }                                   

    private void paramName2FocusGained(java.awt.event.FocusEvent evt) {                                       
        // TODO add your handling code here:
        
        if(paramName2.getText().equalsIgnoreCase(prop.getProperty("paramName2")))
        {
            paramName2.setText("");
        }
        
    }                                      

    
   
    private void paramName2FocusLost(java.awt.event.FocusEvent evt) {                                     
        // TODO add your handling code here:
    	
    	
        if(paramName2.getText().equalsIgnoreCase(""))
        {
        	paramName2.setText(prop.getProperty("paramName2"));        }
    }                                    

    private void paramVal2FocusGained(java.awt.event.FocusEvent evt) {                                      
        // TODO add your handling code here:
        if(paramVal2.getText().equalsIgnoreCase(prop.getProperty("paramVal2")))
        {
         paramVal2.setText("");
        }
    }                                     

    private void paramVal2FocusLost(java.awt.event.FocusEvent evt) {                                    
        // TODO add your handling code here:
    	
    	
        if(paramVal2.getText().equalsIgnoreCase(""))
        {
        	 paramVal2.setText(prop.getProperty("paramVal2"));
        	   
        }
    }                                   

    private void paramName3FocusGained(java.awt.event.FocusEvent evt) {                                       
        // TODO add your handling code here:
        if(paramName3.getText().equalsIgnoreCase(prop.getProperty("paramName3")))
        {
            paramName3.setText("");
        }
    }                                      

    private void paramName3FocusLost(java.awt.event.FocusEvent evt) {                                     
        // TODO add your handling code here:
    	
        if(paramName3.getText().equalsIgnoreCase(""))
        {
        	 paramName3.setText(prop.getProperty("paramName3"));
     	    
        }
    }                                    

    private void paramVal3FocusGained(java.awt.event.FocusEvent evt) {                                      
        // TODO add your handling code here:
    	
        if(paramVal3.getText().equalsIgnoreCase(prop.getProperty("paramVal3")))
        {
         paramVal3.setText("");
        }
    }                                     

    private void paramVal3FocusLost(java.awt.event.FocusEvent evt) {                                    
        // TODO add your handling code here:
    	
        if(paramVal3.getText().equalsIgnoreCase(""))
        {
        	paramVal3.setText(prop.getProperty("paramVal3"));
        }
    }                                   

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
		
    	setVisible(false);
        perfObj.setVisible(true);      
        
        
    }                                           

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        
        setBounds(jFrameSize);
        
        addMoreButton1.setVisible(true);
        
        inputPanel2.setVisible(false);
        inputPanel3.setVisible(false);
        
        
       
        paramName1.setText(prop.getProperty("paramName1"));
        paramVal1.setText(prop.getProperty("paramVal1"));
        paramName2.setText(prop.getProperty("paramName2"));
        paramVal2.setText(prop.getProperty("paramVal2"));
        paramName3.setText(prop.getProperty("paramName3"));
        paramVal3.setText(prop.getProperty("paramVal2"));
        
        myMap.clear();
        
        
        
    }                                           

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        
        if(!paramName3.getText().equalsIgnoreCase("Parameter Name"))
        {
        	myMap.put(paramName3.getText(), paramVal3.getText());
        	
        }
        

        perfObj.setReqHeadMap(myMap);
        
        
        
        setVisible(false);
        perfObj.setVisible(true);
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestHeaderJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestHeaderJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestHeaderJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestHeaderJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestHeaderJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addMoreButton1;
    private javax.swing.JButton addMoreButton2;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JPanel inputPanel1;
    private javax.swing.JPanel inputPanel2;
    private javax.swing.JPanel inputPanel3;
    private javax.swing.JTextField paramName1;
    private javax.swing.JTextField paramName2;
    private javax.swing.JTextField paramName3;
    private javax.swing.JTextField paramVal1;
    private javax.swing.JTextField paramVal2;
    private javax.swing.JTextField paramVal3;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton submitButton;
    // End of variables declaration                   

    
    InputStream io;
    Properties prop;
    
    Rectangle jFrameSize;
    HashMap<String, String> myMap = new LinkedHashMap<String, String>();   
    
	
	 private PerfMonitoringReportMain perfObj;




    
    public void setPerfObj(PerfMonitoringReportMain perfObj) {
		this.perfObj = perfObj;
	}





	private class ListenerForTfAndButtonReq implements ActionListener , FocusListener 
    {

		@Override
		public void focusGained(FocusEvent evt) {
			// TODO Auto-generated method stub
			
			if(evt.getSource() == paramName1)
			{
				paramName1FocusGained(evt);			}
			else if(evt.getSource() == paramName2)
			{
				paramName2FocusGained(evt);
			}
			else if(evt.getSource() == paramName3)
			{
				paramName3FocusGained(evt);
				
			}
			else if(evt.getSource()==paramVal1)
			{
				paramVal1FocusGained(evt);
			}
			else if(evt.getSource()==paramVal2)
			{
				paramVal2FocusGained(evt);
			}
			else if(evt.getSource()==paramVal3)
			{
				paramVal3FocusGained(evt);
			}
		}

		@Override
		public void focusLost(FocusEvent evt) 
		{
			// TODO Auto-generated method stub
			if(evt.getSource() == paramName1)
			{
				paramName1FocusLost(evt);
			}
			else if(evt.getSource() == paramName2)
			{
				paramName2FocusLost(evt);
			}
			else if(evt.getSource() == paramName3)
			{
				paramName3FocusLost(evt);
			}
			else if(evt.getSource() == paramVal1)
			{
				paramVal1FocusLost(evt);
			}
			else if(evt.getSource() == paramVal2)
			{
				paramVal2FocusLost(evt);
			}
			else if(evt.getSource() == paramVal2)
			{
				paramVal3FocusLost(evt);
			}
		}

		@Override
		public void actionPerformed(ActionEvent e) 
		{
			// TODO Auto-generated method stub
		switch (e.getActionCommand()) 
		{
		case "Submit":
			submitButtonActionPerformed(e);
			break;

		case "Reset":
			resetButtonActionPerformed(e);
			break;
			
		case  "Close":
			closeButtonActionPerformed(e);	
			break;
		case  "Addmore":
			addMoreButton1ActionPerformed(e);
			break;
		case  "Addmore1":
			addMoreButton2ActionPerformed(e);
			break;
	
		default:
			break;
		}
	}
  }

    
    
}